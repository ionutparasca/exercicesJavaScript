// Exerci탵iul 1: Cel mai bun juc캒tor
// Scrie o func탵ie calcAverageScore care calculeaz캒 media punctajelor unui juc캒tor pe baza unui array de scoruri.

// Apoi, scrie o func탵ie bestPlayer care prime탳te dou캒 scoruri medii 탳i determin캒 care juc캒tor este mai bun.

// Dac캒 unul dintre juc캒tori are un scor de cel pu탵in 1.5 ori mai mare dec칙t cel캒lalt, el este declarat c칙탳tig캒tor.
// Dac캒 niciun juc캒tor nu are un avantaj suficient, afi탳eaz캒 "No player wins...".

let scoreFirstPlayer = [10, 15, 23];
let scoreSecondPlayer = [11, 17, 21];

const calcAverageScore = (a, b, c) => (a + b + c) / 3;

const avScoreFirstPlayer = calcAverageScore(
  scoreFirstPlayer[0],
  scoreFirstPlayer[1],
  scoreFirstPlayer[2]
);
const avScoreSecondPlayer = calcAverageScore(
  scoreSecondPlayer[0],
  scoreSecondPlayer[1],
  scoreSecondPlayer[2]
);
console.log(avScoreFirstPlayer, avScoreSecondPlayer);

const whoWin = function () {
  if (avScoreFirstPlayer >= 1.5 * avScoreSecondPlayer) {
    console.log(`First Player win`);
  } else if (avScoreSecondPlayer >= 1.5 * avScoreFirstPlayer) {
    console.log(`Second player win`);
  } else {
    console.log(`no player win`);
  }
};
whoWin(avScoreFirstPlayer, avScoreSecondPlayer);

// Exerci탵iul 2: Competi탵ia de alergat
// Dou캒 echipe concureaz캒 칥ntr-o competi탵ie de alergare. Fiecare echip캒 are 4 alerg캒tori, iar fiecare alerg캒tor are un timp total 칥n secunde.

// Creeaz캒 o func탵ie calcTotalTime care prime탳te un array cu timpii a 4 alerg캒tori 탳i returneaz캒 timpul total al echipei.
// Creeaz캒 o func탵ie checkFastestTeam care compar캒 cele dou캒 echipe 탳i afi탳eaz캒 echipa c칙탳tig캒toare.
// Echipa cu timpul total cel mai mic c칙탳tig캒.
// Dac캒 diferen탵a este mai mic캒 de 10 secunde, afi탳eaz캒 "Race was very close!".

const team1 = [60, 55, 70, 65];
const team2 = [62, 58, 68, 66];

const calcTotalTimeteam1 = function average1() {
  return `Average time for team 1 is ${
    (team1[0] + team1[1] + team1[2] + team1[3]) / 4
  } minutes.`;
};
console.log(calcTotalTimeteam1());

const calcTotalTimeTeam2 = function average2() {
  return `Average time for team 2 is ${
    (team2[0] + team2[1] + team2[2] + team2[3]) / 4
  } minutes`;
};
console.log(calcTotalTimeTeam2());

const checkFastestTeam = function () {
  if (calcTotalTimeteam1 > calcTotalTimeTeam2) {
    return `Second team win 游끥游끥游끥`;
  } else if (calcTotalTimeTeam2 > calcTotalTimeteam1) {
    return `First team win 游끥游끥游끥`;
  } else {
    return `Its a tie游릻游릻`;
  }
};
console.log(checkFastestTeam());

const timeDifference = Math.abs(team1 - team2);

if (timeDifference < 10) {
  console.log("Race was very close!");
} else {
  console.log("Race was not so close.");
}

// Exerci탵iul 3: Cel mai mare profit
// Trei magazine 칥탳i 칥nregistreaz캒 veniturile din ultimele 5 zile.

// Creeaz캒 o func탵ie calcTotalRevenue care prime탳te un array cu veniturile zilnice 탳i returneaz캒 totalul.
// Creeaz캒 o func탵ie findBestStore care compar캒 veniturile a trei magazine 탳i determin캒 care a avut cel mai mare profit.

const store1 = [200, 300, 250, 400, 350];
const store2 = [180, 320, 280, 410, 370];
const store3 = [210, 290, 270, 420, 360];

let totalRevenue1 = 0;
const calcTotalRevenue1 = function () {
  return `Suma totala este ${
    store1[0] + store1[1] + store1[2] + store1[3] + store1[4]
  }`;
};
console.log(calcTotalRevenue1());

let totalRevenue2 = 0;
const calcTotalRevenue2 = function () {
  return `Suma totala este ${
    store2[0] + store2[1] + store2[2] + store2[3] + store2[4]
  }`;
};
console.log(calcTotalRevenue2());
let totalRevenue3 = 0;
const calcTotalRevenue3 = function () {
  return `Suma totala este ${
    store3[0] + store3[1] + store3[2] + store3[3] + store3[4]
  }`;
};
console.log(calcTotalRevenue3());

const calcTotalRevenue = function () {
  return `The total is ${
    calcTotalRevenue1() + calcTotalRevenue2() + calcTotalRevenue3()
  }`;
};
console.log(calcTotalRevenue());
